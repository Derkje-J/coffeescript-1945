// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Game.AssetManager = (function() {
    function AssetManager() {
      this._onProgress = __bind(this._onProgress, this);
      this._onLoad = __bind(this._onLoad, this);
      this.preload = new createjs.LoadQueue();
      this.preload.setMaxConnections(5);
      this.preload.loadFile({
        id: 'basesheet',
        src: "img/1945.png"
      }, false);
      this.preload.loadFile({
        id: 'bottom',
        src: "img/1945.bottom.gif"
      }, false);
      this.preload.loadFile({
        id: 'shards',
        src: "img/1945.shards.png"
      }, false);
      this.objects = {};
    }

    AssetManager.prototype.load = function(callback, onProgress) {
      if (onProgress == null) {
        onProgress = this._onProgress;
      }
      this.preload.addEventListener("complete", callback);
      this.preload.addEventListener("fileload", this._onLoad);
      this.preload.addEventListener("progress", onProgress);
      this.preload.load();
      return this;
    };

    AssetManager.prototype._onLoad = function(event) {
      switch (event.item.type) {
        case createjs.LoadQueue.IMAGE:
          return this.objects[event.item.id] = new createjs.Bitmap(event.result);
      }
    };

    AssetManager.prototype._onProgress = function(event) {
      return console.log(event.progress, event.loaded, event.total);
    };

    AssetManager.prototype.get = function(id) {
      return this.objects[id];
    };

    return AssetManager;

  })();

  (typeof exports !== "undefined" && exports !== null ? exports : this).Game.AssetManager = new Game.AssetManager();

}).call(this);
