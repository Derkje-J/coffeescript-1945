// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Game.Container = (function() {
    function Container() {
      this.update = __bind(this.update, this);      this.objects = {};
      this.container = new createjs.Container();
      Object.defineProperty(this, 'createjs', {
        get: function() {
          return this.container;
        }
      });
    }

    Container.prototype.update = function(event) {
      var key, object, _ref;

      _ref = this.objects;
      for (key in _ref) {
        object = _ref[key];
        object.update(event);
      }
      return this;
    };

    Container.prototype.add = function(key, object) {
      if (this.get(key) != null) {
        throw new Error("There already is an object with that key (" + key + ").");
      }
      this.objects[key] = object;
      this.container.addChild(object.createjs);
      return this;
    };

    Container.prototype.remove = function(key) {
      var object;

      if ((object = this.get(key)) == null) {
        throw new Error("There is not an object with that key (" + key + ").");
      }
      this.container.removeChild(object.createjs);
      delete this.objects[key];
      return this;
    };

    Container.prototype.get = function(key) {
      return this.objects[key];
    };

    return Container;

  })();

}).call(this);
