// Generated by CoffeeScript 1.7.1
(function() {
  Game.Timeline = (function() {
    function Timeline(gameLevel) {
      this.gameLevel = gameLevel;
      this.currentFrame = 0;
      this.speed = 1.0;
      this.timeFrames = {};
      this.timeStamps = [];
      Object.defineProperty(this, 'isDone', {
        get: function() {
          return this.nextTimeStamp >= this.timeStamps.length;
        }
      });
    }

    Timeline.prototype.add = function(time, object) {
      if (this.timeFrames[time] === void 0) {
        this.timeFrames[time] = [];
        this.timeStamps.push(time);
      }
      this.timeFrames[time].push(object);
      return this;
    };

    Timeline.prototype.prepare = function() {
      this.timeStamps.sort(function(a, b) {
        return a - b;
      });
      this.nextTimeStamp = 0;
      this.nextFrame = this.isDone ? Number.MAX_VALUE : this.timeStamps[this.nextTimeStamp];
      return this;
    };

    Timeline.prototype.update = function(event) {
      var dt;
      dt = event.delta;
      this.currentFrame += dt * this.speed;
      while (this._process()) {
        void 0;
      }
      return this;
    };

    Timeline.prototype._process = function() {
      var object, _i, _len, _ref;
      if (this.currentFrame < this.nextFrame) {
        return false;
      }
      _ref = this.timeFrames[this.nextFrame];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        object = _ref[_i];
        object.spawn();
      }
      this.currentFrame++;
      this.nextTimeStamp++;
      this.nextFrame = this.isDone ? Number.MAX_VALUE : this.timeStamps[this.nextTimeStamp];
      return true;
    };

    return Timeline;

  })();

}).call(this);
