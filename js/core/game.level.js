// Generated by CoffeeScript 1.6.2
(function() {
  'use strict';  Game.Level = (function() {
    function Level(game) {
      this.game = game;
      this.create();
      Game.EventManager.on('plane.destroy', this, this.onPlaneDestroyed);
    }

    Level.prototype.onPlaneDestroyed = function(source) {
      if (source instanceof Game.PlaneEnemy) {
        return this.game.removeFrom('level', this.game.get('level').findKey(source));
      } else if (source instanceof Game.Player) {
        return this.game.die();
      }
    };

    Level.prototype.create = function() {
      this.createBackground();
      this.createPlayer();
      this.createEnemies();
      this.createHeadsUpDisplay();
      return this;
    };

    Level.prototype.createBackground = function() {
      this.game.addTo('background', 'islandA', Builder.BackgroundIsland.create('A'));
      this.game.addTo('background', 'islandB', Builder.BackgroundIsland.create('B'));
      this.game.addTo('background', 'islandC', Builder.BackgroundIsland.create('C'));
      return this;
    };

    Level.prototype.createPlayer = function() {
      return this.game.addTo('level', 'player', this.player = Builder.PlanePlayer.create());
    };

    Level.prototype.createEnemies = function() {
      var enemy, i, _i, _results;

      _results = [];
      for (i = _i = 0; _i < 10; i = ++_i) {
        _results.push(this.game.addTo('level', 'enemy-' + i, enemy = Builder.PlaneGreen.create()));
      }
      return _results;
    };

    Level.prototype.createHeadsUpDisplay = function() {
      return this.game.addTo('hud', 'bottom', this.hud = new Display.HeadsUpDisplay(this.game, this));
    };

    Level.prototype.clear = function() {
      this.game.get('collisions').clear();
      this.clearBackground();
      this.clearPlayer();
      this.clearEnemies();
      this.clearHeadsUpDisplay();
      return this;
    };

    Level.prototype.clearBackground = function() {
      this.game.removeFrom('background', 'islandA');
      this.game.removeFrom('background', 'islandB');
      this.game.removeFrom('background', 'islandC');
      return this;
    };

    Level.prototype.clearPlayer = function() {
      this.game.removeFrom('level', 'player');
      return this;
    };

    Level.prototype.clearEnemies = function() {
      var i, _i, _results;

      _results = [];
      for (i = _i = 0; _i < 10; i = ++_i) {
        _results.push(this.game.removeFrom('level', 'enemy-' + i));
      }
      return _results;
    };

    Level.prototype.clearHeadsUpDisplay = function() {
      this.game.removeFrom('hud', 'bottom');
      return this;
    };

    Level.prototype.restart = function() {
      this.clear();
      this.create();
      return this;
    };

    return Level;

  })();

}).call(this);
