// Generated by CoffeeScript 1.6.2
(function() {
  'use strict';
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Game.Shard = (function(_super) {
    __extends(Shard, _super);

    Shard.Types = {
      back: 'back'
    };

    function Shard(spritesheet, x, y, vx, vy, frame, type) {
      var r, vr;

      vx *= 0.8;
      vy *= 0.8;
      vx += (Math.random() * 80 - 40 + 0.5) | 0;
      vy += (Math.random() * 80 - 40 + 0.5) | 0;
      vr = (Math.random() * 720 - 360 + 0.5) | 0;
      r = (Math.random() * 360 + 0.5) | 0;
      Shard.__super__.constructor.call(this, spritesheet, x, y, vx, vy);
      this.stop(type);
      while (frame-- > 0) {
        this.createjs.advance();
      }
      this.r = r;
      this.velocity.r = vr;
      this.velocity.sx = -.5;
      this.velocity.sy = -.5;
      this.velocity.a = -.75;
      this.acceleration = {
        x: (vx / -2) | 0,
        y: (vy / -2) | 0,
        r: (vr / -4) | 0
      };
      this.health = 1.5;
      Game.EventManager.trigger('shard.create', this, []);
    }

    Shard.prototype.destroy = function() {
      Shard.__super__.destroy.apply(this, arguments);
      Game.EventManager.trigger('shard.destroy', this, []);
      return this;
    };

    Shard.prototype.update = function(event) {
      var dt, prop, value, _ref;

      if (event.paused) {
        return;
      }
      dt = event.delta / 1000;
      _ref = this.acceleration;
      for (prop in _ref) {
        value = _ref[prop];
        this.velocity[prop] += dt * value;
      }
      Shard.__super__.update.call(this, event);
      if ((this.health -= dt) <= 0) {
        this.destroy();
      }
      return this;
    };

    return Shard;

  })(Game.Movable);

}).call(this);
