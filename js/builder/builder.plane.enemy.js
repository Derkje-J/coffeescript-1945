// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Builder.EnemyPlane = (function(_super) {
    __extends(EnemyPlane, _super);

    function EnemyPlane() {
      this._behaviours = [];
      EnemyPlane.__super__.constructor.call(this);
    }

    EnemyPlane.prototype.keepLooping = function() {
      this._behaviours.push(Game.EnemyPlane.Behaviour.looper);
      return this;
    };

    EnemyPlane.prototype.randomPosition = function() {
      this.randomPositionX();
      this.randomPositionY();
      return this;
    };

    EnemyPlane.prototype.randomPositionX = function() {
      this._behaviours.push(Game.EnemyPlane.Behaviour.spawn.random.x);
      return this;
    };

    EnemyPlane.prototype.randomPositionY = function() {
      this._behaviours.push(Game.EnemyPlane.Behaviour.spawn.random.y);
      return this;
    };

    EnemyPlane.prototype.keepRespawning = function() {
      this._behaviours.push(Game.EnemyPlane.Behaviour.spawn.ondeath);
      return this;
    };

    EnemyPlane.prototype.position = function(x, y) {
      this.positionX(x);
      this.positionY(y);
      return this;
    };

    EnemyPlane.prototype.positionX = function(x) {
      this._spawnPositionX = x;
      return this;
    };

    EnemyPlane.prototype.positionY = function(y) {
      this._spawnPositionY = y;
      return this;
    };

    EnemyPlane.prototype.getBehaviours = function() {
      return this._behaviours;
    };

    return EnemyPlane;

  })(Builder.SpriteSheet);

}).call(this);
